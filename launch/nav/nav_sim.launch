<?xml version="1.0"?>

<launch>



	<!-- arguments used primarily for the gazebo_ros pkg's launch file "empty_world.launch" -->
	<arg name="paused"        default="false" />
	<arg name="use_sim_time"  default="true" />
	<arg name="gui"           default="true" />
	<arg name="headless"      default="false" />
	<arg name="debug"         default="false" />
	<arg name="world"         default="room12x12.world" />
	<arg name="maze_world"    default="false" />





	<!-- Open an empty world in Gazebo -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">

		<arg name="debug"         value="$(arg debug)" />
		<arg name="gui"           value="$(arg gui)" />
		<arg name="paused"        value="$(arg paused)" />
		<arg name="use_sim_time"  value="$(arg use_sim_time)" />
		<arg name="headless"      value="$(arg headless)" />

	</include>



	<!-- Load the URDF of the P3DX with a Kinect into the ROS Parameter Server -->
	<param name="robot_description" command="$(find xacro)/xacro.py '$(find native)/urdf/p3dx_kinect.xacro'" />

	<!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
	<node if="$(arg maze_world)" name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
		respawn="false" output="screen" args="-x -2 -y -10 -z 0 -Y 1.57 -urdf -model pioneer -param robot_description" />
	<node unless="$(arg maze_world)" name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
		respawn="false" output="screen" args="-urdf -model pioneer -param robot_description" />



        <!-- Publish the P3-DX's state to tf -->
	<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        	<param name="publish_frequency" type="double" value="30.0" />
	</node>
	<node pkg="tf" type="static_transform_publisher" name="base_link_to_base_footprint" args="0 0 0 0 0 0          base_link base_footprint 50"/>
	<node pkg="tf" type="static_transform_publisher" name="base_link_to_center_wheel"   args="-0.2 0 0.036 0 0 0   base_link center_wheel 50"/>
	<node pkg="tf" type="static_transform_publisher" name="base_link_to_swivel"         args="-0.178 0 0.052 0 0 0 base_link swivel 50"/>



	<!-- Publish joint state so that rviz can access it -->
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />









</launch>

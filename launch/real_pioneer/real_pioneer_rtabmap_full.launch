<?xml version="1.0"?>

<launch>



	<arg name="HOME"                    default="/home/abdul"/>
	<arg name="rtabmapviz_cfg"          default="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" />
	
	<!-- If openni.launch is changed, these topic names may also need to be changed -->
	<arg name="rgb_topic"               default="/camera/rgb/image_rect_color" />
	<arg name="depth_registered_topic"  default="/camera/depth_registered/image_raw" />
	<arg name="camera_info_topic"       default="/camera/rgb/camera_info" />

	<arg name="subscribe_scan"          default="false"/>
	<arg name="subscribe_scan_cloud"    default="false"/>     
	<arg name="scan_topic"              default="/scan"/>
	<arg name="scan_cloud_topic"        default="/scan_cloud"/>
	
	<arg name="odom_topic"              default="/RosAria/pose"/>
	<arg name="visual_odometry"         default="false"/>

	<!-- argument that defines the port that will be used to interface with the P3-DX from our laptop -->
	<arg name="port_val"                default="/dev/ttyUSB0"/>

	<!-- cmd_vel param to direct the topic name for our movement msgs -->
	<param name="cmd_vel_topic" value="/RosAria/cmd_vel"/>



<!-- This section launches openni.launch, which launches the RGBD camera and makes all of the nodes/topics available -->
	<include file="$(find openni_launch)/launch/openni.launch"> 
		<arg name = "depth_registration" value = "true"/>
	</include>



	<node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan">
		<param name="scan_height"     value="60"/>
		<param name="output_frame_id" value="/camera_depth_frame"/>
		<param name="range_min"       value="0.45"/>
		<param name="range_max"       value="4.0"/>

		<remap from="image"           to="$(arg depth_registered_topic)"/>
		<remap from="scan"            to="$(arg scan_topic)"/>
	</node>



	<node pkg="tf" type="static_transform_publisher" name="base_to_camera" args="0 0 0 0 0 0 /base_link /camera_link 100" /> <!-- To relate the camera's tf tree to the P3-DX's "basic" tf tree -->
  
	<group ns="rtabmap">

    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="--delete_db_on_start">

      <param name="frame_id" type="string" value="base_link"/>
      <param name="subscribe_depth" type="bool" value="true"/>

      <remap from="odom" to="/RosAria/pose"/>
      <remap from="rgb/image" to="/camera/rgb/image_rect_color"/>
      <remap from="depth/image" to="/camera/depth_registered/image_raw"/>
      <remap from="rgb/camera_info" to="/camera/rgb/camera_info"/>
      <param name="queue_size" type="int" value="10"/>

      <!-- RTAB-Map's parameters -->
      <param name="RGBD/AngularUpdate" type="string" value="0.01"/>
      <param name="RGBD/LinearUpdate" type="string" value="0.01"/>
      <param name="Rtabmap/TimeThr" type="string" value="700"/>
      <param name="Mem/RehearsalSimilarity" type="string" value="0.45"/>
      <param name="RGBD/OptimizeFromGraphEnd" type="string" value="true"/>

    </node>



    <!-- Visualisation RTAB-Map -->

    <node pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" output="screen" launch-prefix="">

      <param name="subscribe_depth" type="bool" value="true"/>
      <param name="subscribe_scan" type="bool" value="false"/>
      <param name="subscribe_scan_cloud" type="bool" value="false"/>
      <param name="subscribe_odom_info" type="bool" value="false"/>
      <param name="frame_id" type="string" value="camera_link"/>
      <param name="wait_for_transform_duration" type="double" value="0.2"/>

      <remap from="rgb/image" to="/camera/rgb/image_rect_color"/>
      <remap from="depth/image" to="/camera/depth_registered/image_raw"/>
      <remap from="rgb/camera_info" to="/camera/rgb/camera_info"/>

      <remap from="odom" to="/RosAria/pose"/>

    </node>
  </group>


	<node pkg="topic_tools" type="relay" name="map_relay" args="/rtabmap/grid_map /map" />


	<!-- Interface with the P3-DX -->
	<node name="RosAria" pkg="rosaria" type="RosAria" required="true">
		<param name="port" value="$(arg port_val)"/>
		<remap from="/RosAria/pose" to="$(arg odom_topic)"/>
	</node>



	<!-- Control the P3DX model with the ARC -->
	<node name="map_mover" type="map_mover.py" pkg="native" output="screen" required="true"/>


</launch>

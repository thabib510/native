<?xml version="1.0"?>

<launch>



	<arg name="HOME"                    default="/home/abdul"/>
	<arg name="map_file"                default="$(find native)/maps/map.yaml"/>
	
	<!-- If openni.launch is changed, these topic names may also need to be changed -->
	<arg name="rgb_topic"               default="/camera/rgb/image_rect_color" />
	<arg name="depth_registered_topic"  default="/camera/depth_registered/image_raw" />
	<arg name="camera_info_topic"       default="/camera/rgb/camera_info" />

	<arg name="subscribe_scan"          default="false"/>
	<arg name="subscribe_scan_cloud"    default="false"/>     
	<arg name="scan_topic"              default="/scan"/>
	<arg name="scan_cloud_topic"        default="/scan_cloud"/>
	
	<arg name="odom_topic"              default="/odom"/>
	<arg name="visual_odometry"         default="false"/>

	<!-- argument that defines the port that will be used to interface with the P3-DX from our laptop -->
	<arg name="port_val" default="/dev/ttyUSB0"/>

	<!-- cmd_vel param to direct the topic name for our movement msgs -->
	<arg   name="cmd_vel_topic" value="/RosAria/cmd_vel"/>
	<param name="cmd_vel_topic" value="/RosAria/cmd_vel"/>



<!-- This section launches openni.launch, which launches the RGBD camera and makes all of the nodes/topics available -->
	<include file="$(find openni_launch)/launch/openni.launch"> 
		<arg name = "depth_registration" value = "true"/>
	</include>



	<node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan">
		<param name="scan_height"     value="60"/>
		<param name="output_frame_id" value="/camera_depth_frame"/>
		<param name="range_min"       value="0.45"/>
		<param name="range_max"       value="4.0"/>

		<remap from="image"           to="$(arg depth_registered_topic)"/>
		<remap from="scan"            to="$(arg scan_topic)"/>
	</node>



	<node pkg="tf" type="static_transform_publisher" name="base_to_camera" args="0 0 0 0 0 0 /base_link /camera_link 100" /> <!-- To relate the camera's tf tree to the P3-DX's "basic" tf tree -->
  
	<group ns="rtabmap">

		<node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" args="--delete_db_on_start" required="true">

			<param name="frame_id"             type="string" value="base_link"/>
			<param name="subscribe_depth"      type="bool"   value="true"/>
			<param name="subscribe_laserScan"  type="bool"   value="true"/>

			<remap from="odom"            to="$(arg odom_topic)"/>
			<remap from="scan"            to="$(arg scan_topic)"/>
			<remap from="rgb/image"       to="$(arg rgb_topic)"/>
			<remap from="depth/image"     to="$(arg depth_registered_topic)"/>
			<remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>

			<param name="scan_voxel_size"              type="str"      value="0.01" />
			<param name="queue_size"                   type="int"      value="30"/>

			<param name="Rtabmap/DatabasePath"         type="string"   value="$(arg HOME)/.ros/rtabmap.db"/> 
			<param name="Rtabmap/DetectionRate"        type="string"   value="3"/>
			<param name="Rtabmap/TimeThr"              type="string"   value="0"/> 
			<param name="Rtabmap/LoopThr"              type="string"   value="0.2"/>

			<param name="Mem/IncrementalMemory"        type="string"   value="false"/> <!-- Localization Mode-->          
			<param name="Mem/BadSignaturesIgnored"     type="string"   value="false"/>      
			<param name="Mem/RehearsalSimilarity"      type="string"   value="0.45"/>
			<param name="Mem/RehearsedNodesKept"       type="string"   value="false"/><!-- -->
    
			<param name="DbSqlite3/CacheSize"          type="string"   value="10000"/>           
			<param name="RGBD/ScanMatchingSize"        type="string"   value="0"/> <!-- -->
			<param name="RGBD/LocalLoopDetectionSpace" type="string"   value="false"/> <!-- -->
			<param name="RGBD/LocalLoopDetectionTime"  type="string"   value="true"/> <!-- -->
			<param name="RGBD/AngularUpdate"           type="string"   value="0.01"/>            
			<param name="RGBD/LinearUpdate"            type="string"   value="0.01"/>   
			<param name="RGBD/OptimizeFromGraphEnd"    type="string"   value="false"/>    

			<param name="Reg/Strategy"                 type="string"   value="2"/> <!-- -->
			<param name="Optimizer/Iterations"         type="string"   value="100"/>
			<param name="Icp/VoxelSize"                type="string"   value="0"/>
			<param name="Vis/MinInliers"               type="string"   value="3"/>                 
			<param name="Vis/MaxDepth"                 type="string"   value="4.0"/>                 
			<param name="Vis/InlierDistance"           type="string"   value="0.05"/>
			<param name="Odom/MinInliers"              type="string"   value="10"/>   
			
		</node>

	</group>


	<node pkg="rviz" type="rviz" name="rviz" args="-d $(find native)/nav_config.rviz"/>


	<!-- Interface with the P3-DX -->
	<node name="RosAria" pkg="rosaria" type="RosAria" required="true">
		<param name="port" value="$(arg port_val)"/>
		<remap from="/RosAria/pose" to="$(arg odom_topic)"/>
	</node>



	<node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />



	<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">

		<rosparam file="$(find native)/param/costmap_common_params.yaml"      command="load" ns="global_costmap" />
		<rosparam file="$(find native)/param/costmap_common_params.yaml"      command="load" ns="local_costmap" />
		<rosparam file="$(find native)/param/local_costmap_params.yaml"       command="load" />
		<rosparam file="$(find native)/param/global_costmap_params.yaml"      command="load" />
		<rosparam file="$(find native)/param/base_local_planner_params.yaml"  command="load" />
		<rosparam file="$(find native)/param/move_base_params.yaml"           command="load" />

		<remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
		<remap from="odom"    to="$(arg odom_topic)"/>

	</node>


</launch>

